class Product {
    int productId;
    String productName;
    String category;

    Product(int id, String name, String cat) {
        this.productId = id;
        this.productName = name;
        this.category = cat;
    }

    public String toString() {
        return productId + ": " + productName + " [" + category + "]";
    }
}

public class SearchFunctionExample {

    public static int linearSearch(Product[] products, String target) {
        for (int i = 0; i < products.length; i++) {
            if (products[i].productName.equalsIgnoreCase(target)) return i;
        }
        return -1;
    }

    public static int binarySearch(Product[] products, String target) {
        int low = 0, high = products.length - 1;
        while (low <= high) {
            int mid = (low + high) / 2;
            int cmp = products[mid].productName.compareToIgnoreCase(target);
            if (cmp == 0) return mid;
            else if (cmp < 0) low = mid + 1;
            else high = mid - 1;
        }
        return -1;
    }

    public static void main(String[] args) {
        Product[] products = {
            new Product(1, "Bag", "Travel"),
            new Product(2, "Laptop", "Electronics"),
            new Product(3, "Shoes", "Fashion")
        };

        int index = linearSearch(products, "Laptop");
        System.out.println("Linear Search Found: " + products[index]);

        java.util.Arrays.sort(products, (a, b) -> a.productName.compareToIgnoreCase(b.productName));
        index = binarySearch(products, "Shoes");
        System.out.println("Binary Search Found: " + products[index]);
    }
}

output:
     Linear Search Found: 2: Laptop [Electronics]
     Binary Search Found: 3: Shoes [Fashion]

